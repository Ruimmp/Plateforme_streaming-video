-- MySQL Script generated by MySQL Workbench
-- Wed Jan 20 14:15:16 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`series`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`series` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `onLine` DATE NOT NULL,
  `description` VARCHAR(200) NULL,
  `miniature` JSON NULL,
  `trailer` JSON NULL,
  `evaluation` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `UNIQUE_Index` (`title` ASC, `onLine` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`seasons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`seasons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` INT NOT NULL,
  `date` DATE NOT NULL,
  `series_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UNIQUE_Index` (`number` ASC, `date` ASC) VISIBLE,
  INDEX `fk_seasons_series_idx` (`series_id` ASC) VISIBLE,
  CONSTRAINT `fk_seasons_series`
    FOREIGN KEY (`series_id`)
    REFERENCES `mydb`.`series` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`imageResolutions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`imageResolutions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `height` INT NULL,
  `width` INT NULL,
  `colorsFormats` VARCHAR(5) NULL,
  `hdr` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `UNIQUE_Index` (`height` ASC, `width` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`episodes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`episodes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `number` INT NOT NULL,
  `duration` TIME NULL,
  `description` VARCHAR(200) NULL,
  `miniature` JSON NULL,
  `evaluation` DOUBLE NULL,
  `seasons_id` INT NOT NULL,
  `imageResolutions_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Unique_Index` (`title` ASC, `number` ASC) VISIBLE,
  INDEX `fk_episodes_seasons1_idx` (`seasons_id` ASC) VISIBLE,
  INDEX `fk_episodes_imageResolutions1_idx` (`imageResolutions_id` ASC) VISIBLE,
  CONSTRAINT `fk_episodes_seasons1`
    FOREIGN KEY (`seasons_id`)
    REFERENCES `mydb`.`seasons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_episodes_imageResolutions1`
    FOREIGN KEY (`imageResolutions_id`)
    REFERENCES `mydb`.`imageResolutions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`people`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`people` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(50) NULL,
  `lastName` VARCHAR(50) NULL,
  `email` VARCHAR(100) NOT NULL,
  `phone` INT NULL,
  `birth` DATE NULL,
  `npa` INT NULL,
  `city` VARCHAR(50) NULL,
  `street` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(100) NULL,
  `people_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC) VISIBLE,
  INDEX `fk_roles_people1_idx` (`people_id` ASC) VISIBLE,
  CONSTRAINT `fk_roles_people1`
    FOREIGN KEY (`people_id`)
    REFERENCES `mydb`.`people` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`productionStudios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`productionStudios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `ide` VARCHAR(15) NOT NULL,
  `email` VARCHAR(100) NULL,
  `phone` INT NULL,
  `npa` INT NULL,
  `city` VARCHAR(50) NULL,
  `street` VARCHAR(100) NULL,
  `creation` DATE NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ide_UNIQUE` (`ide` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `type` VARCHAR(50) NULL,
  `description` VARCHAR(200) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`audioResolutions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`audioResolutions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `resolution` INT NULL,
  `format` VARCHAR(50) NULL,
  `episodes_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UNIQUE_Index` (`resolution` ASC, `format` ASC) VISIBLE,
  INDEX `fk_audioResolutions_episodes1_idx` (`episodes_id` ASC) VISIBLE,
  CONSTRAINT `fk_audioResolutions_episodes1`
    FOREIGN KEY (`episodes_id`)
    REFERENCES `mydb`.`episodes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ageRestrictions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ageRestrictions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `age` INT NOT NULL,
  `description` VARCHAR(200) NULL,
  `episodes_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `age_UNIQUE` (`age` ASC) VISIBLE,
  INDEX `fk_ageRestrictions_episodes1_idx` (`episodes_id` ASC) VISIBLE,
  CONSTRAINT `fk_ageRestrictions_episodes1`
    FOREIGN KEY (`episodes_id`)
    REFERENCES `mydb`.`episodes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`profilesImages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`profilesImages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `image` JSON NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `image_UNIQUE` (`image` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`meansOfPayment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`meansOfPayment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`subscriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`subscriptions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `price` DOUBLE NULL,
  `description` VARCHAR(200) NULL,
  `videoResolution` INT NULL,
  `simultaneousDevices` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(100) NULL,
  `lastName` VARCHAR(100) NULL,
  `birth` DATE NULL,
  `npa` INT NULL,
  `city` VARCHAR(50) NULL,
  `street` VARCHAR(100) NULL,
  `email` VARCHAR(100) NOT NULL,
  `phone` INT NULL,
  `meansOfPayment_id` INT NOT NULL,
  `subscriptions_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_account_meansOfPayment1_idx` (`meansOfPayment_id` ASC) VISIBLE,
  INDEX `fk_account_subscriptions1_idx` (`subscriptions_id` ASC) VISIBLE,
  CONSTRAINT `fk_account_meansOfPayment1`
    FOREIGN KEY (`meansOfPayment_id`)
    REFERENCES `mydb`.`meansOfPayment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_account_subscriptions1`
    FOREIGN KEY (`subscriptions_id`)
    REFERENCES `mydb`.`subscriptions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  `ageRestrictions_id` INT NOT NULL,
  `profilesImages_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_users_ageRestrictions1_idx` (`ageRestrictions_id` ASC) VISIBLE,
  INDEX `fk_users_profilesImages1_idx` (`profilesImages_id` ASC) VISIBLE,
  INDEX `fk_users_account1_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_ageRestrictions1`
    FOREIGN KEY (`ageRestrictions_id`)
    REFERENCES `mydb`.`ageRestrictions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_profilesImages1`
    FOREIGN KEY (`profilesImages_id`)
    REFERENCES `mydb`.`profilesImages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `mydb`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`favorites`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`favorites` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_favorites_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_favorites_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movies` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NULL,
  `date` DATE NULL,
  `description` VARCHAR(200) NULL,
  `duration` TIME NULL,
  `miniature` JSON NULL,
  `trailer` JSON NULL,
  `evaluation` DOUBLE NULL,
  `audioResolutions_id` INT NOT NULL,
  `ageRestrictions_id` INT NOT NULL,
  `imageResolutions_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UNIQUE_Index` (`title` ASC, `date` ASC) VISIBLE,
  INDEX `fk_movies_audioResolutions1_idx` (`audioResolutions_id` ASC) VISIBLE,
  INDEX `fk_movies_ageRestrictions1_idx` (`ageRestrictions_id` ASC) VISIBLE,
  INDEX `fk_movies_imageResolutions1_idx` (`imageResolutions_id` ASC) VISIBLE,
  CONSTRAINT `fk_movies_audioResolutions1`
    FOREIGN KEY (`audioResolutions_id`)
    REFERENCES `mydb`.`audioResolutions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_ageRestrictions1`
    FOREIGN KEY (`ageRestrictions_id`)
    REFERENCES `mydb`.`ageRestrictions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_imageResolutions1`
    FOREIGN KEY (`imageResolutions_id`)
    REFERENCES `mydb`.`imageResolutions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`subscriptions_has_imageResolutions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`subscriptions_has_imageResolutions` (
  `subscriptions_id` INT NOT NULL,
  `imageResolutions_id` INT NOT NULL,
  INDEX `fk_subscriptions_has_imageResolutions_imageResolutions1_idx` (`imageResolutions_id` ASC) VISIBLE,
  INDEX `fk_subscriptions_has_imageResolutions_subscriptions1_idx` (`subscriptions_id` ASC) VISIBLE,
  CONSTRAINT `fk_subscriptions_has_imageResolutions_subscriptions1`
    FOREIGN KEY (`subscriptions_id`)
    REFERENCES `mydb`.`subscriptions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subscriptions_has_imageResolutions_imageResolutions1`
    FOREIGN KEY (`imageResolutions_id`)
    REFERENCES `mydb`.`imageResolutions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`series_has_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`series_has_roles` (
  `series_id` INT NOT NULL,
  `roles_id` INT NOT NULL,
  INDEX `fk_series_has_roles_roles1_idx` (`roles_id` ASC) VISIBLE,
  INDEX `fk_series_has_roles_series1_idx` (`series_id` ASC) VISIBLE,
  CONSTRAINT `fk_series_has_roles_series1`
    FOREIGN KEY (`series_id`)
    REFERENCES `mydb`.`series` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_has_roles_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `mydb`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`episodes_has_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`episodes_has_roles` (
  `episodes_id` INT NOT NULL,
  `roles_id` INT NOT NULL,
  INDEX `fk_episodes_has_roles_roles1_idx` (`roles_id` ASC) VISIBLE,
  INDEX `fk_episodes_has_roles_episodes1_idx` (`episodes_id` ASC) VISIBLE,
  CONSTRAINT `fk_episodes_has_roles_episodes1`
    FOREIGN KEY (`episodes_id`)
    REFERENCES `mydb`.`episodes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_episodes_has_roles_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `mydb`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`series_has_productionStudios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`series_has_productionStudios` (
  `series_id` INT NOT NULL,
  `productionStudios_id` INT NOT NULL,
  INDEX `fk_series_has_productionStudios_productionStudios1_idx` (`productionStudios_id` ASC) VISIBLE,
  INDEX `fk_series_has_productionStudios_series1_idx` (`series_id` ASC) VISIBLE,
  CONSTRAINT `fk_series_has_productionStudios_series1`
    FOREIGN KEY (`series_id`)
    REFERENCES `mydb`.`series` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_has_productionStudios_productionStudios1`
    FOREIGN KEY (`productionStudios_id`)
    REFERENCES `mydb`.`productionStudios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categories_has_series`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`categories_has_series` (
  `categories_id` INT NOT NULL,
  `series_id` INT NOT NULL,
  INDEX `fk_categories_has_series_series1_idx` (`series_id` ASC) VISIBLE,
  INDEX `fk_categories_has_series_categories1_idx` (`categories_id` ASC) VISIBLE,
  CONSTRAINT `fk_categories_has_series_categories1`
    FOREIGN KEY (`categories_id`)
    REFERENCES `mydb`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categories_has_series_series1`
    FOREIGN KEY (`series_id`)
    REFERENCES `mydb`.`series` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users_has_episodes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users_has_episodes` (
  `users_id` INT NOT NULL,
  `episodes_id` INT NOT NULL,
  INDEX `fk_users_has_episodes_episodes1_idx` (`episodes_id` ASC) VISIBLE,
  INDEX `fk_users_has_episodes_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_episodes_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_episodes_episodes1`
    FOREIGN KEY (`episodes_id`)
    REFERENCES `mydb`.`episodes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`roles_has_movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`roles_has_movies` (
  `roles_id` INT NOT NULL,
  `movies_id` INT NOT NULL,
  INDEX `fk_roles_has_movies_movies1_idx` (`movies_id` ASC) VISIBLE,
  INDEX `fk_roles_has_movies_roles1_idx` (`roles_id` ASC) VISIBLE,
  CONSTRAINT `fk_roles_has_movies_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `mydb`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_roles_has_movies_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `mydb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`productionStudios_has_movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`productionStudios_has_movies` (
  `productionStudios_id` INT NOT NULL,
  `movies_id` INT NOT NULL,
  INDEX `fk_productionStudios_has_movies_movies1_idx` (`movies_id` ASC) VISIBLE,
  INDEX `fk_productionStudios_has_movies_productionStudios1_idx` (`productionStudios_id` ASC) VISIBLE,
  CONSTRAINT `fk_productionStudios_has_movies_productionStudios1`
    FOREIGN KEY (`productionStudios_id`)
    REFERENCES `mydb`.`productionStudios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productionStudios_has_movies_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `mydb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categories_has_movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`categories_has_movies` (
  `categories_id` INT NOT NULL,
  `movies_id` INT NOT NULL,
  INDEX `fk_categories_has_movies_movies1_idx` (`movies_id` ASC) VISIBLE,
  INDEX `fk_categories_has_movies_categories1_idx` (`categories_id` ASC) VISIBLE,
  CONSTRAINT `fk_categories_has_movies_categories1`
    FOREIGN KEY (`categories_id`)
    REFERENCES `mydb`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categories_has_movies_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `mydb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users_has_movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users_has_movies` (
  `users_id` INT NOT NULL,
  `movies_id` INT NOT NULL,
  INDEX `fk_users_has_movies_movies1_idx` (`movies_id` ASC) VISIBLE,
  INDEX `fk_users_has_movies_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_movies_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_movies_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `mydb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`favorites_has_movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`favorites_has_movies` (
  `favorites_id` INT NOT NULL,
  `movies_id` INT NOT NULL,
  INDEX `fk_favorites_has_movies_movies1_idx` (`movies_id` ASC) VISIBLE,
  INDEX `fk_favorites_has_movies_favorites1_idx` (`favorites_id` ASC) VISIBLE,
  CONSTRAINT `fk_favorites_has_movies_favorites1`
    FOREIGN KEY (`favorites_id`)
    REFERENCES `mydb`.`favorites` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_has_movies_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `mydb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`favorites_has_series`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`favorites_has_series` (
  `favorites_id` INT NOT NULL,
  `series_id` INT NOT NULL,
  INDEX `fk_favorites_has_series_series1_idx` (`series_id` ASC) VISIBLE,
  INDEX `fk_favorites_has_series_favorites1_idx` (`favorites_id` ASC) VISIBLE,
  CONSTRAINT `fk_favorites_has_series_favorites1`
    FOREIGN KEY (`favorites_id`)
    REFERENCES `mydb`.`favorites` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_has_series_series1`
    FOREIGN KEY (`series_id`)
    REFERENCES `mydb`.`series` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
